name: Build and Deploy Backend to Staging

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  setup-environment: 
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean old code on VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/polymorphia

      - name: Clone repository to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          script: |
            git clone --depth 1 --branch "develop" https://github.com/${{ github.repository }}.git ~/polymorphia

  test-backend:
    needs: setup-environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        working-directory: ./polymorphia-backend
        run: |
          mvn test -Dspring.profiles.active=test

  build-backend:
    needs: setup-environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Build Docker image
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          script: |
            cd ~/polymorphia/polymorphia-backend
            docker build -t polymorphia-backend:staging-latest -f Dockerfile .

  run-backend: 
    needs: [test-backend, build-backend]
    runs-on: ubuntu-latest

    steps:
      - name: Run backend on VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_VM_IP }}
          username: ${{ secrets.STAGING_VM_USER }}
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          script: |
            docker stop polymorphia-backend-staging || true
            docker rm polymorphia-backend-staging || true
            docker run -d --name polymorphia-backend-staging -p 8081:8080 \
              -v /app/config:/app/config \
              -v ~/polymorphia-static:/app/static \
              polymorphia-backend:staging-latest \
              --spring.config.location=file:/app/config/application.properties 

  # validate-deploy:
  #   needs: run-backend
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Wait 5 minutes and check backend
  #     uses: appleboy/ssh-action@v1
  #     with:
  #       host: ${{ secrets.STAGING_VM_IP }}
  #       username: ${{ secrets.STAGING_VM_USER }}
  #       key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
  #       script: |
  #         sleep 300
  #         docker ps --filter name=polymorphia-backend-staging --quiet || exit 1

  deploy-staging-success:
    needs: [setup-environment, test-backend, build-backend, run-backend,
      # validate-deploy
    ]
    runs-on: ubuntu-latest
    
    steps:
      - name: All jobs completed successfully
        run: echo "All deployment jobs completed successfully!" 
      

