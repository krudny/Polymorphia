name: Build and Deploy Backend to Develop Testing

on:
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean target database
        run: |
          PGPASSWORD="${{ secrets.STAGING_DB_PASSWORD }}" psql -h ${{ secrets.STAGING_VM_IP }} -U ${{ secrets.STAGING_DB_USER }} -d ${{ secrets.STAGING_DB_NAME }} -p ${{ secrets.STAGING_DB_PORT }} -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

      - name: Copy data from staging database to test database
        env:
          STAGING_DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          STAGING_DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          STAGING_DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
          STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        run: |
          PGPASSWORD=$STAGING_DB_PASSWORD pg_dump -h $STAGING_DB_HOST -p $STAGING_DB_PORT -U $STAGING_DB_USER $STAGING_DB_NAME | \
          PGPASSWORD=$TEST_DB_PASSWORD psql -h $TEST_DB_HOST -p $TEST_DB_PORT -U $TEST_DB_USER $TEST_DB_NAME



      # - name: Migrate database
      #   uses: docker://redgate/flyway:11
      #   with:
      #     args: >
      #       migrate
      #       -locations=filesystem:/github/workspace/migrations
      #       -url=jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
      #       -user=${{ secrets.DB_USER }}
      #       -password=${{ secrets.DB_PASSWORD }}

  # clone-repo:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Remove old files
  #       run: rm -rf polymorphia

  #     - name: Clone repository
  #       run: git clone --depth 1 --branch "${{ github.head_ref }}" https://github.com/${{ github.repository }} polymorphia




  # build-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Auth to Google Cloud
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: ${{ secrets.GCP_CREDENTIALS }}

  #     - name: Setup gcloud & Docker auth
  #       uses: google-github-actions/setup-gcloud@v2

  #     - run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

  #     - name: Build & push image
  #       run: |
  #         IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/polymorphia-backend/polymorphia-backend:develop-latest"
  #         docker build -t "$IMAGE" -f polymorphia-backend/Dockerfile polymorphia-backend
  #         docker push "$IMAGE"

  #   outputs:
  #     image: ${{ steps.build-and-push.outputs.image }}

  # migrate:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: SSH + Flyway
  #     uses: appleboy/ssh-action@v1
  #     with:
  #       host: ${{ secrets.STAGING_VM_IP }}
  #       username: ${{ secrets.STAGING_VM_USER }}
  #       key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
  #       script: |
  #         TEST_DB_HOST="${{ secrets.TEST_DB_HOST }}"
  #         TEST_DB_PORT="${{ secrets.TEST_DB_PORT }}"
  #         TEST_DB_NAME="${{ secrets.TEST_DB_NAME }}"
  #         TEST_DB_USER="${{ secrets.TEST_DB_USER }}"
  #         TEST_DB_PASSWORD="${{ secrets.TEST_DB_PASSWORD }}"
          
  #         if ! command -v flyway >/dev/null; then
  #           curl -fsSL https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/11.12.0/flyway-commandline-11.12.0-linux-x64.tar.gz \
  #           | tar -xz -C /tmp
  #           sudo ln -sf /tmp/flyway-11.12.0/flyway /usr/local/bin/flyway
  #         fi
          
  #         export FLYWAY_URL="jdbc:postgresql://${TEST_DB_HOST}:${TEST_DB_PORT}/${TEST_DB_NAME}"
  #         export FLYWAY_USER="${TEST_DB_USER}"
  #         export FLYWAY_PASSWORD="${TEST_DB_PASSWORD}"
          
          
          
          
  #         flyway -locations=filesystem:repo/polymorphia-backend/src/main/resources/db/migration -cleanDisabled="false" clean
  #         flyway -locations=filesystem:repo/polymorphia-backend/src/main/resources/db/migration migrate


  # run-backend:
  #   needs: migrate
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: SSH & deploy container
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.STAGING_VM_IP }}
  #         username: ${{ secrets.STAGING_VM_USER }}
  #         key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
  #         script: |
  #           IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/polymorphia-backend/polymorphia-backend:develop-latest"

  #           gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
  #           docker pull "$IMAGE"

  #           docker stop polymorphia-backend || true
  #           docker rm polymorphia-backend || true

  #           docker run -d --name polymorphia-backend \
  #             -p 8080:8080 \
  #             -v /app/config:/app/config \
  #             -v ~/polymorphia-static:/app/static \
  #             "$IMAGE" \
  #             --spring.config.location=file:/app/config/application-dev.properties